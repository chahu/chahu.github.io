"use strict";class DataManager{constructor(){this.user={},this.routes={},this.events={},this.userCache={}}enrich_csv(t,e){this.counter=void 0===this.counter?1:this.counter,t.forEach((t,e)=>{const s=d3.select("#"+t.wall).node().getPointAtLength(t.offset);t.x=s.x,t.y=s.y,t.offset=parseFloat(t.offset),t.id=++this.counter})}month_exists(t,e){const s=e.substring(0,e.length-1),r=this[`get_min_${s}_date`](),n=this[`get_max_${s}_date`]();return!(t+"-32"<r)&&!(t+"-00">n)}async get_data_for_month(t,e,s=0,r=""){let n=new Date(t.valueOf());if(r=r.toLowerCase(),n.setUTCMonth(n.getUTCMonth()+s),n=date_to_string(n),n=n.substring(0,n.length-3),!this.month_exists(n,e))return[];try{if(this[e][n])this[e][n]instanceof Promise&&await this[e][n];else{this[e][n]=d3.csv(`data/${e}/${r}/${n}.csv`);const t=await this[e][n];this.enrich_csv(t),this[e][n]=t}}catch(t){this[e][n]=[]}return this[e][n]}async get_data(t){const e=t.baseMonth,s=[];for(const r of t.sourceMonths)s.push(this.get_data_for_month(e,t.type,r,t.user));const r=await Promise.all(s);for(const s of t.prefetchMonths)this.get_data_for_month(e,t.type,s,t.user);let n=[];for(const e of r)n=n.concat(e.filter(t.filter));return n}async get_routes(t){const e="string"==typeof t?t:date_to_string(t);return await this.get_data({baseMonth:t,prefetchMonths:[1],sourceMonths:[0,-1,-2,-3],filter:t=>t.start_date<=e&&(t.end_date>=e||!t.end_date),type:"routes"})}async get_events(t){const e="string"==typeof t?t:date_to_string(t);return await this.get_data({baseMonth:t,prefetchMonths:[1],sourceMonths:[0],filter:t=>t.date==e,type:"events",user:this.user.name})}async set_user(t){if(t=t.toLowerCase(),this.userCache[t])return this.user=this.userCache[t].user,void(this.events=this.userCache[t].events);const e=this.user,s=this.events,r=d3.json(`data/events/${t}.json`);try{this.user=await r,this.user.dateLookup={},this.user.dates.forEach(t=>this.user.dateLookup[t]=!0),this.events={},this.userCache[this.user.name]={user:this.user,events:this.events}}catch(t){throw this.user=e,this.events=s,t}}has_event(t){return t="string"==typeof t?t:date_to_string(t),this.user.dateLookup[t]}get_min_event_date(){return this.user.min_date}get_max_event_date(){return this.user.max_date}get_min_route_date(){return"2018-08-01"}get_max_route_date(){return date_to_string(new Date)}}
